plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

group 'io.pokr'
version '1.0'

application {
    mainClassName = 'io.pokr.PokrioKt'
}

repositories {
    mavenCentral()
    jcenter()
}

def getLastCommitMessage = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'log', '-1', '--pretty=reference'
            standardOutput = stdout
        }
        return stdout.toString().trim().replace("\"", "\\\"")
    }
    catch (ignored) {
        return null;
    }
}

buildConfig {
    buildConfigField("String", "LAST_COMMIT", "${getLastCommitMessage}")
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "io.ktor:ktor-server-core:1.3.2"
    implementation "io.ktor:ktor-server-netty:1.3.2"
    implementation "io.ktor:ktor-websockets:1.3.2"
    implementation "io.ktor:ktor-client-json:1.3.2"
    implementation "io.ktor:ktor-auth:1.3.2"

    compile group: 'io.ktor', name: 'ktor-thymeleaf', version: '1.4.1'

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.corundumstudio.socketio:netty-socketio:1.7.18'

    implementation 'io.github.cdimascio:java-dotenv:5.1.3'

    implementation 'org.apache.commons:commons-text:1.7'

    implementation 'org.xerial:sqlite-jdbc:3.34.0'
    implementation "org.jetbrains.exposed:exposed-core:0.25.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.25.1"

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Pokr.io server',
                'Implementation-Version': version,
                'Main-Class': 'io.pokr.PokrioKt'
    }
    baseName = 'pokrio'
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
compileKotlin {
    kotlinOptions {
        languageVersion = "1.4"
    }
}

